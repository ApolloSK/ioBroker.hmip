{"version":3,"file":"static/js/src_bootstrap_jsx.d8159a9e.chunk.js","mappings":"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","sources":["HmipComponent.jsx","App.jsx","theme.js","bootstrap.jsx"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@mui/styles';\r\n\r\nimport {\r\n    LinearProgress,\r\n    Button,\r\n    CircularProgress,\r\n} from '@mui/material';\r\n\r\n// important to make from package and not from some children.\r\n// invalid\r\n// import ConfigGeneric from '@iobroker/adapter-react-v5/ConfigGeneric';\r\n// valid\r\nimport { ConfigGeneric, I18n } from '@iobroker/adapter-react-v5';\r\n\r\nconst styles = () => ({\r\n});\r\n\r\nclass HmipComponent extends ConfigGeneric {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            response: false,\r\n            running: false,\r\n            initialized: false,\r\n            alive: false,\r\n            error: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        super.componentDidMount();\r\n        const state = this.props.socket.getState(`hmip.${this.props.instance}.alive`);\r\n        if (state?.val) {\r\n            this.setState({ alive: true, initialized: true }, () => this.askState());\r\n        }\r\n        this.props.socket.subscribeState(`system.adapter.hmip.${this.props.instance}.alive`, this.onAliveChanged);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        super.componentWillUnmount();\r\n        this.props.socket.unsubscribeState(`system.adapter.hmip.${this.props.instance}.alive`, this.onAliveChanged);\r\n        if (this.askTimeout) {\r\n            clearTimeout(this.askTimeout);\r\n            this.askTimeout = null;\r\n        }\r\n    }\r\n\r\n    async askState() {\r\n        const response = await this.props.socket.sendTo(`hmip.${this.props.instance}`, 'requestTokenState', null);\r\n\r\n        if (this.handleResponse(response)) {\r\n            this.askTimeout = this.askTimeout || setTimeout(() => {\r\n                this.askTimeout = null;\r\n                this.askState();\r\n            }, 300);\r\n        }\r\n    }\r\n\r\n    handleResponse(response) {\r\n        switch (response.state) {\r\n            case 'startedTokenCreation':\r\n                this.setState({ response: 'started token creation', running: true });\r\n                return true;\r\n            case 'waitForBlueButton':\r\n                this.setState({ response: 'press blue button on accesspoint', running: true });\r\n                return true;\r\n            case 'confirmToken':\r\n                this.setState({ response: 'confirming token', running: true });\r\n                return true;\r\n            case 'errorOccurred':\r\n                this.setState({ response: 'error occurred during token generation, look at the logs', running: false, error: true });\r\n                break;\r\n            case 'idle':\r\n                this.setState({ response: 'press \"request token\"', running: false });\r\n                break;\r\n            case 'tokenCreated': {\r\n                this.setState({ response: 'token created, save settings to use your accesspoint', running: false });\r\n                ConfigGeneric.setValue(this.props.data, 'authToken', response.authToken);\r\n                ConfigGeneric.setValue(this.props.data, 'clientAuthToken', response.clientAuthToken);\r\n                ConfigGeneric.setValue(this.props.data, 'clientId', response.clientId);\r\n                this.props.onChange(this.props.data, undefined, () =>\r\n                    this.props.forceUpdate(['authToken', 'clientAuthToken', 'clientId'], this.props.data));\r\n                break;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    async requestToken() {\r\n        const config = {\r\n            accessPointSgtin: ConfigGeneric.getValue(this.props.data, 'accessPointSgtin'),\r\n            clientId: ConfigGeneric.getValue(this.props.data, 'clientId'),\r\n            pin: ConfigGeneric.getValue(this.props.data, 'pin') || '',\r\n            deviceName: ConfigGeneric.getValue(this.props.data, 'deviceName'),\r\n        };\r\n        this.setState({ response: 'started token creation', running: true, error: false });\r\n        const response = await this.props.socket.sendTo(`hmip.${this.props.instance}`, 'requestToken', config);\r\n        if (this.handleResponse(response)) {\r\n            this.askTimeout = this.askTimeout || setTimeout(() => {\r\n                this.askTimeout = null;\r\n                this.askState();\r\n            }, 300);\r\n        }\r\n    }\r\n\r\n    onAliveChanged = (id, state) => {\r\n        const alive = state ? state.val : false;\r\n        if (alive !== this.state.alive) {\r\n            this.setState({ alive }, () => {\r\n                if (alive && !this.state.initialized) {\r\n                    setTimeout(() =>\r\n                        this.setState({ initialized: true }, () => this.askState(), 100));\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    renderItem() {\r\n        if (!this.state.alive && !this.state.initialized) {\r\n            return <div>{I18n.t('custom_hmip_not_alive')}</div>;\r\n        }\r\n        if (!this.state.initialized) {\r\n            return <LinearProgress />;\r\n        }\r\n\r\n        const accessPointSgtin = ConfigGeneric.getValue(this.props.data, 'accessPointSgtin');\r\n\r\n        return <div style={{ width: '100%'}}>\r\n            <div\r\n                style={{\r\n                    color: this.state.error ? (this.props.themeType === 'dark' ? '#c20000' : '#800000') : undefined,\r\n                }}\r\n            >\r\n                {I18n.t(`custom_hmip_${this.state.response}`).replace('custom_hmip_', '')}\r\n            </div>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                disabled={this.state.running || !accessPointSgtin}\r\n                onClick={() => this.requestToken()}\r\n            >\r\n                {this.state.running ? <CircularProgress size={24} /> : I18n.t('custom_hmip_request_token')}\r\n            </Button>\r\n        </div>;\r\n    }\r\n}\r\n\r\nHmipComponent.propTypes = {\r\n    socket: PropTypes.object.isRequired,\r\n    themeType: PropTypes.string,\r\n    themeName: PropTypes.string,\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    data: PropTypes.object.isRequired,\r\n    attr: PropTypes.string,\r\n    schema: PropTypes.object,\r\n    onError: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n};\r\n\r\nexport default withStyles(styles)(HmipComponent);\r\n","// this file used only for simulation and not used in end build\r\n\r\nimport React from 'react';\r\nimport { ThemeProvider, StyledEngineProvider } from '@mui/material/styles';\r\n\r\nimport withStyles from '@mui/styles/withStyles';\r\n\r\nimport GenericApp from '@iobroker/adapter-react-v5/GenericApp';\r\nimport I18n from '@iobroker/adapter-react-v5/i18n';\r\nimport Loader from '@iobroker/adapter-react-v5/Components/Loader';\r\n\r\nimport HmipComponent from './HmipComponent';\r\n\r\nconst styles = theme => ({\r\n    app: {\r\n        backgroundColor: theme.palette.background.default,\r\n        color: theme.palette.text.primary,\r\n        height: '100%',\r\n    },\r\n    item: {\r\n        padding: 50,\r\n        width: 400\r\n    }\r\n});\r\n\r\nclass App extends GenericApp {\r\n    constructor(props) {\r\n        const extendedProps = { ...props };\r\n        super(props, extendedProps);\r\n\r\n        this.state = {\r\n            data: { myCustomAttribute: 'red' },\r\n            theme: this.createTheme(),\r\n        };\r\n        const translations = {\r\n            en: require('./i18n/en'),\r\n            de: require('./i18n/de'),\r\n            ru: require('./i18n/ru'),\r\n            pt: require('./i18n/pt'),\r\n            nl: require('./i18n/nl'),\r\n            fr: require('./i18n/fr'),\r\n            it: require('./i18n/it'),\r\n            es: require('./i18n/es'),\r\n            pl: require('./i18n/pl'),\r\n            uk: require('./i18n/uk'),\r\n            'zh-cn': require('./i18n/zh-cn'),\r\n        };\r\n\r\n        I18n.setTranslations(translations);\r\n        I18n.setLanguage((navigator.language || navigator.userLanguage || 'en').substring(0, 2).toLowerCase());\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.loaded) {\r\n            return <StyledEngineProvider injectFirst>\r\n                <ThemeProvider theme={this.state.theme}>\r\n                    <Loader theme={this.state.themeType} />\r\n                </ThemeProvider>\r\n            </StyledEngineProvider>;\r\n        }\r\n\r\n        return <StyledEngineProvider injectFirst>\r\n            <ThemeProvider theme={this.state.theme}>\r\n                <div className={this.props.classes.app}>\r\n                    <div className={this.props.classes.item}>\r\n                        <HmipComponent\r\n                            socket={this.socket}\r\n                            themeType={this.state.themeType}\r\n                            themeName={this.state.themeName}\r\n                            attr='myCustomAttribute'\r\n                            data={this.state.data}\r\n                            onError={() => {}}\r\n                            instance={0}\r\n                            schema={{\r\n                                name: 'ConfigCustomHmipSet/Components/HmipComponent',\r\n                                type: 'custom',\r\n                            }}\r\n                            onChange={data => {\r\n                                this.setState({ data });\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </ThemeProvider>\r\n        </StyledEngineProvider>;\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(App);","// this file used only for simulation and not used in end build\r\nimport Theme from '@iobroker/adapter-react-v5/Theme';\r\n\r\nexport default type => {\r\n    const danger = '#dd5325';\r\n    const success = '#73b6a8';\r\n    const theme = { ...Theme(type) };\r\n    if (!theme) {\r\n        return theme;\r\n    }\r\n    theme.palette.text.danger = {\r\n        color: danger,\r\n    };\r\n    theme.palette.text.success = {\r\n        color: success,\r\n    };\r\n\r\n    return theme;\r\n};","// this file used only for simulation and not used in end build\r\n\r\n/* eslint-disable */\r\nimport React from 'react';\r\nimport { createRoot } from 'react-dom/client';\r\nimport { ThemeProvider, StyledEngineProvider } from '@mui/material/styles';\r\nimport Utils from '@iobroker/adapter-react-v5/Components/Utils';\r\nimport App from './App';\r\nimport theme from './theme';\r\n\r\nwindow.adapterName = 'adapter-component-template';\r\nlet themeName = Utils.getThemeName();\r\n\r\nfunction build() {\r\n    const container = document.getElementById('root');\r\n    const root = createRoot(container);\r\n    return root.render(<React.StrictMode>\r\n        <StyledEngineProvider injectFirst>\r\n            <ThemeProvider theme={theme(themeName)}>\r\n                <App\r\n                    socket={{port: 8081}}\r\n                    onThemeChange={(_theme) => {\r\n                        themeName = _theme;\r\n                        build();\r\n                    }}\r\n                />\r\n            </ThemeProvider>\r\n        </StyledEngineProvider>\r\n    </React.StrictMode>);\r\n}\r\n\r\nbuild();"],"names":["styles","HmipComponent","props","id","state","alive","response","config","accessPointSgtin","theme","App","extendedProps","translations","StyledEngineProvider","ThemeProvider","data","withStyles","type","danger","success","Theme","themeName","build","container","_theme"],"sourceRoot":""}