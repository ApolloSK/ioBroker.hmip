{"version":3,"file":"static/js/src_Components_jsx.00934e26.chunk.js","mappings":"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","sources":["HmipComponent.jsx","Components.jsx"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { LinearProgress, Button, CircularProgress } from '@mui/material';\r\n\r\n// important to make from package and not from some children.\r\n// invalid\r\n// import ConfigGeneric from '@iobroker/adapter-react-v5/ConfigGeneric';\r\n// valid\r\nimport { I18n } from '@iobroker/adapter-react-v5';\r\nimport { ConfigGeneric } from '@iobroker/json-config';\r\n\r\nclass HmipComponent extends ConfigGeneric {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.alive = false;\r\n\r\n        Object.assign(this.state, {\r\n            response: '',\r\n            running: false,\r\n            initialized: false,\r\n            error: false,\r\n        });\r\n\r\n        this.socket = this.props.oContext?.socket || this.props.socket;\r\n        this.instance = this.props.oContext ? this.props.oContext.instance : this.props.instance;\r\n        this.themeType = this.props.oContext ? this.props.oContext.themeType : this.props.themeType;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        super.componentWillUnmount();\r\n        if (this.askTimeout) {\r\n            clearTimeout(this.askTimeout);\r\n            this.askTimeout = null;\r\n        }\r\n    }\r\n\r\n    async askState() {\r\n        const response = await this.socket.sendTo(`hmip.${this.instance}`, 'requestTokenState', null);\r\n\r\n        if (this.handleResponse(response)) {\r\n            this.askTimeout =\r\n                this.askTimeout ||\r\n                setTimeout(() => {\r\n                    this.askTimeout = null;\r\n                    this.askState();\r\n                }, 300);\r\n        }\r\n    }\r\n\r\n    handleResponse(response) {\r\n        switch (response.state) {\r\n            case 'startedTokenCreation':\r\n                this.setState({ response: 'started token creation', running: true });\r\n                return true;\r\n            case 'waitForBlueButton':\r\n                this.setState({ response: 'press blue button on accesspoint', running: true });\r\n                return true;\r\n            case 'confirmToken':\r\n                this.setState({ response: 'confirming token', running: true });\r\n                return true;\r\n            case 'errorOccurred':\r\n                this.setState({\r\n                    response: 'error occurred during token generation, look at the logs',\r\n                    running: false,\r\n                    error: true,\r\n                });\r\n                break;\r\n            case 'idle':\r\n                this.setState({ response: 'press \"request token\"', running: false });\r\n                break;\r\n            case 'tokenCreated': {\r\n                this.setState({ response: 'token created, save settings to use your accesspoint', running: false });\r\n\r\n                ConfigGeneric.setValue(this.props.data, 'authToken', response.authToken);\r\n                ConfigGeneric.setValue(this.props.data, 'clientAuthToken', response.clientAuthToken);\r\n                ConfigGeneric.setValue(this.props.data, 'clientId', response.clientId);\r\n\r\n                this.props.onChange(this.props.data, undefined, () => {\r\n                    const forceUpdate = this.props.oContext?.forceUpdate || this.props.forceUpdate;\r\n                    if (forceUpdate) {\r\n                        forceUpdate(['authToken', 'clientAuthToken', 'clientId'], this.props.data);\r\n                    }\r\n                });\r\n                break;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    requestToken() {\r\n        this.setState({ response: 'started token creation', running: true, error: false }, async () => {\r\n            const config = {\r\n                accessPointSgtin: ConfigGeneric.getValue(this.props.data, 'accessPointSgtin'),\r\n                clientId: ConfigGeneric.getValue(this.props.data, 'clientId'),\r\n                pin: ConfigGeneric.getValue(this.props.data, 'pin') || '',\r\n                deviceName: ConfigGeneric.getValue(this.props.data, 'deviceName'),\r\n            };\r\n\r\n            const response = await this.socket.sendTo(`hmip.${this.instance}`, 'requestToken', config);\r\n\r\n            if (this.handleResponse(response)) {\r\n                this.askTimeout =\r\n                    this.askTimeout ||\r\n                    setTimeout(() => {\r\n                        this.askTimeout = null;\r\n                        this.askState();\r\n                    }, 300);\r\n            }\r\n        });\r\n    }\r\n\r\n    renderItem() {\r\n        if (this.alive !== this.props.alive) {\r\n            this.alive = this.props.alive;\r\n            if (this.alive && !this.state.initialized) {\r\n                // Ask hmip instance\r\n                setTimeout(() => this.setState({ initialized: true }, () => this.askState(), 100));\r\n            }\r\n        }\r\n\r\n        if (!this.props.oContext?.theme && !this.props.theme) {\r\n            return <div>...</div>;\r\n        }\r\n\r\n        if (!this.props.alive && !this.state.initialized) {\r\n            return <div className=\"hmip-admin-component\">{I18n.t('custom_hmip_not_alive')}</div>;\r\n        }\r\n        if (!this.state.initialized) {\r\n            return <LinearProgress />;\r\n        }\r\n\r\n        const accessPointSgtin = ConfigGeneric.getValue(this.props.data, 'accessPointSgtin');\r\n\r\n        let instruction = null;\r\n        if (this.state.response === 'press \"request token\"') {\r\n            instruction = I18n.t('custom_hmip_press_hcu_button').split('\"Home Control Unit\"');\r\n            if (instruction.length === 2) {\r\n                instruction = (\r\n                    <div style={{ width: '100%' }}>\r\n                        <span>{instruction[0]}</span>\r\n                        <span\r\n                            style={{\r\n                                marginLeft: 1,\r\n                                marginRight: 1,\r\n                                fontWeight: 600,\r\n                                color: this.themeType === 'dark' ? '#0091c5' : '#004b61',\r\n                            }}\r\n                        >\r\n                            \"Home Control Unit\"\r\n                        </span>\r\n                        <span>{instruction[1]}</span>\r\n                    </div>\r\n                );\r\n            } else {\r\n                instruction = <div style={{ width: '100%' }}>{I18n.t('custom_hmip_press_hcu_button')}</div>;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div\r\n                style={{ width: '100%' }}\r\n                className=\"hmip-admin-component\"\r\n            >\r\n                {instruction}\r\n                <div\r\n                    style={{\r\n                        color: this.state.error ? (this.themeType === 'dark' ? '#c20000' : '#800000') : undefined,\r\n                        marginBottom: 8,\r\n                    }}\r\n                >\r\n                    {I18n.t(`custom_hmip_${this.state.response}`).replace('custom_hmip_', '')}\r\n                </div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    disabled={this.state.running || !accessPointSgtin}\r\n                    onClick={() => this.requestToken()}\r\n                >\r\n                    {this.state.running ? <CircularProgress size={24} /> : I18n.t('custom_hmip_request_token')}\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nHmipComponent.propTypes = {\r\n    // @deprecated\r\n    socket: PropTypes.object.isRequired,\r\n    // @deprecated\r\n    themeType: PropTypes.string,\r\n    // @deprecated\r\n    themeName: PropTypes.string,\r\n\r\n    oContext: PropTypes.object,\r\n\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    data: PropTypes.object.isRequired,\r\n    attr: PropTypes.string,\r\n    schema: PropTypes.object,\r\n    onError: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n};\r\n\r\nexport default HmipComponent;\r\n","import HmipComponent from './HmipComponent';\r\n\r\nexport default { HmipComponent };\r\n"],"names":["HmipComponent","props","response","forceUpdate","config","accessPointSgtin","instruction"],"sourceRoot":""}