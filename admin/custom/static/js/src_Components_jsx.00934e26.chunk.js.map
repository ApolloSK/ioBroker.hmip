{"version":3,"file":"static/js/src_Components_jsx.00934e26.chunk.js","mappings":"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","sources":["HmipComponent.jsx","Components.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { LinearProgress, Button, CircularProgress } from '@mui/material';\n\n// important to make from package and not from some children.\n// invalid\n// import ConfigGeneric from '@iobroker/adapter-react-v5/ConfigGeneric';\n// valid\nimport { I18n } from '@iobroker/adapter-react-v5';\nimport { ConfigGeneric } from '@iobroker/json-config';\n\nclass HmipComponent extends ConfigGeneric {\n    constructor(props) {\n        super(props);\n\n        this.alive = false;\n\n        Object.assign(this.state, {\n            response: '',\n            running: false,\n            initialized: false,\n            error: false,\n        });\n\n        this.socket = this.props.oContext?.socket || this.props.socket;\n        this.instance = this.props.oContext ? this.props.oContext.instance : this.props.instance;\n        this.themeType = this.props.oContext ? this.props.oContext.themeType : this.props.themeType;\n    }\n\n    componentWillUnmount() {\n        super.componentWillUnmount();\n        if (this.askTimeout) {\n            clearTimeout(this.askTimeout);\n            this.askTimeout = null;\n        }\n    }\n\n    async askState() {\n        const response = await this.socket.sendTo(`hmip.${this.instance}`, 'requestTokenState', null);\n\n        if (this.handleResponse(response)) {\n            this.askTimeout =\n                this.askTimeout ||\n                setTimeout(() => {\n                    this.askTimeout = null;\n                    this.askState();\n                }, 300);\n        }\n    }\n\n    handleResponse(response) {\n        switch (response.state) {\n            case 'startedTokenCreation':\n                this.setState({ response: 'started token creation', running: true });\n                return true;\n            case 'waitForBlueButton':\n                this.setState({ response: 'press blue button on accesspoint', running: true });\n                return true;\n            case 'confirmToken':\n                this.setState({ response: 'confirming token', running: true });\n                return true;\n            case 'errorOccurred':\n                this.setState({\n                    response: 'error occurred during token generation, look at the logs',\n                    running: false,\n                    error: true,\n                });\n                break;\n            case 'idle':\n                this.setState({ response: 'press \"request token\"', running: false });\n                break;\n            case 'tokenCreated': {\n                this.setState({ response: 'token created, save settings to use your accesspoint', running: false });\n\n                ConfigGeneric.setValue(this.props.data, 'authToken', response.authToken);\n                ConfigGeneric.setValue(this.props.data, 'clientAuthToken', response.clientAuthToken);\n                ConfigGeneric.setValue(this.props.data, 'clientId', response.clientId);\n\n                this.props.onChange(this.props.data, undefined, () => {\n                    const forceUpdate = this.props.oContext?.forceUpdate || this.props.forceUpdate;\n                    if (forceUpdate) {\n                        forceUpdate(['authToken', 'clientAuthToken', 'clientId'], this.props.data);\n                    }\n                });\n                break;\n            }\n        }\n        return false;\n    }\n\n    requestToken() {\n        this.setState({ response: 'started token creation', running: true, error: false }, async () => {\n            const config = {\n                accessPointSgtin: ConfigGeneric.getValue(this.props.data, 'accessPointSgtin'),\n                clientId: ConfigGeneric.getValue(this.props.data, 'clientId'),\n                pin: ConfigGeneric.getValue(this.props.data, 'pin') || '',\n                deviceName: ConfigGeneric.getValue(this.props.data, 'deviceName'),\n            };\n\n            const response = await this.socket.sendTo(`hmip.${this.instance}`, 'requestToken', config);\n\n            if (this.handleResponse(response)) {\n                this.askTimeout =\n                    this.askTimeout ||\n                    setTimeout(() => {\n                        this.askTimeout = null;\n                        this.askState();\n                    }, 300);\n            }\n        });\n    }\n\n    renderItem() {\n        if (this.alive !== this.props.alive) {\n            this.alive = this.props.alive;\n            if (this.alive && !this.state.initialized) {\n                // Ask hmip instance\n                setTimeout(() => this.setState({ initialized: true }, () => this.askState(), 100));\n            }\n        }\n\n        if (!this.props.oContext?.theme && !this.props.theme) {\n            return <div>...</div>;\n        }\n\n        if (!this.props.alive && !this.state.initialized) {\n            return <div className=\"hmip-admin-component\">{I18n.t('custom_hmip_not_alive')}</div>;\n        }\n        if (!this.state.initialized) {\n            return <LinearProgress />;\n        }\n\n        const accessPointSgtin = ConfigGeneric.getValue(this.props.data, 'accessPointSgtin');\n\n        let instruction = null;\n        if (this.state.response === 'press \"request token\"') {\n            instruction = I18n.t('custom_hmip_press_hcu_button').split('\"Home Control Unit\"');\n            if (instruction.length === 2) {\n                instruction = (\n                    <div style={{ width: '100%' }}>\n                        <span>{instruction[0]}</span>\n                        <span\n                            style={{\n                                marginLeft: 1,\n                                marginRight: 1,\n                                fontWeight: 600,\n                                color: this.themeType === 'dark' ? '#0091c5' : '#004b61',\n                            }}\n                        >\n                            \"Home Control Unit\"\n                        </span>\n                        <span>{instruction[1]}</span>\n                    </div>\n                );\n            } else {\n                instruction = <div style={{ width: '100%' }}>{I18n.t('custom_hmip_press_hcu_button')}</div>;\n            }\n        }\n\n        return (\n            <div\n                style={{ width: '100%' }}\n                className=\"hmip-admin-component\"\n            >\n                {instruction}\n                <div\n                    style={{\n                        color: this.state.error ? (this.themeType === 'dark' ? '#c20000' : '#800000') : undefined,\n                        marginBottom: 8,\n                    }}\n                >\n                    {I18n.t(`custom_hmip_${this.state.response}`).replace('custom_hmip_', '')}\n                </div>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={this.state.running || !accessPointSgtin}\n                    onClick={() => this.requestToken()}\n                >\n                    {this.state.running ? <CircularProgress size={24} /> : I18n.t('custom_hmip_request_token')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nHmipComponent.propTypes = {\n    // @deprecated\n    socket: PropTypes.object.isRequired,\n    // @deprecated\n    themeType: PropTypes.string,\n    // @deprecated\n    themeName: PropTypes.string,\n\n    oContext: PropTypes.object,\n\n    style: PropTypes.object,\n    className: PropTypes.string,\n    data: PropTypes.object.isRequired,\n    attr: PropTypes.string,\n    schema: PropTypes.object,\n    onError: PropTypes.func,\n    onChange: PropTypes.func,\n};\n\nexport default HmipComponent;\n","import HmipComponent from './HmipComponent';\n\nexport default { HmipComponent };\n"],"names":["HmipComponent","props","response","forceUpdate","config","accessPointSgtin","instruction"],"sourceRoot":""}